// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package sqlc

import (
	"database/sql"
	"database/sql/driver"
	"fmt"
	"time"
)

type AdminusergroupsStatus string

const (
	AdminusergroupsStatusActive   AdminusergroupsStatus = "Active"
	AdminusergroupsStatusInactive AdminusergroupsStatus = "Inactive"
)

func (e *AdminusergroupsStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AdminusergroupsStatus(s)
	case string:
		*e = AdminusergroupsStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for AdminusergroupsStatus: %T", src)
	}
	return nil
}

type NullAdminusergroupsStatus struct {
	AdminusergroupsStatus AdminusergroupsStatus
	Valid                 bool // Valid is true if AdminusergroupsStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAdminusergroupsStatus) Scan(value interface{}) error {
	if value == nil {
		ns.AdminusergroupsStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AdminusergroupsStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAdminusergroupsStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AdminusergroupsStatus), nil
}

type AdminusersStatus string

const (
	AdminusersStatusActive   AdminusersStatus = "Active"
	AdminusersStatusInactive AdminusersStatus = "Inactive"
)

func (e *AdminusersStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = AdminusersStatus(s)
	case string:
		*e = AdminusersStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for AdminusersStatus: %T", src)
	}
	return nil
}

type NullAdminusersStatus struct {
	AdminusersStatus AdminusersStatus
	Valid            bool // Valid is true if AdminusersStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullAdminusersStatus) Scan(value interface{}) error {
	if value == nil {
		ns.AdminusersStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.AdminusersStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullAdminusersStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.AdminusersStatus), nil
}

type Adminuser struct {
	ID           string
	Username     string
	Email        string
	Passwordhash string
	Status       NullAdminusersStatus
	Updatedat    sql.NullTime
	Createdat    sql.NullTime
}

type Adminusergroup struct {
	ID          string
	Groupname   string
	Status      AdminusergroupsStatus
	Description sql.NullString
	Updatedat   sql.NullTime
	Createdat   sql.NullTime
}

type Adminusergroupmembership struct {
	ID               string
	Adminuserid      string
	Adminusergroupid string
	Updatedat        sql.NullTime
	Createdat        sql.NullTime
}

type Role struct {
	ID       string
	Name     string
	Apigroup string
	Resource string
	Created  time.Time
	Updated  *time.Time
	Deleted  *time.Time
}

type User struct {
	ID       string
	Name     string
	Password string
	Email    string
	Status   string
	Created  time.Time
	Updated  *time.Time
	Deleted  *time.Time
}

type Userrole struct {
	ID      string
	Userid  string
	Roleid  string
	Created time.Time
	Updated *time.Time
	Deleted *time.Time
}
